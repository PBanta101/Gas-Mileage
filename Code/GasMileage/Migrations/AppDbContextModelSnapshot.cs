// <auto-generated />
using System;
using GasMileage.Models;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace GasMileage.Migrations
{
    [DbContext(typeof(AppDbContext))]
    partial class AppDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("ProductVersion", "5.0.5")
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("GasMileage.Models.Fillup", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("Date")
                        .HasColumnType("datetime2");

                    b.Property<int>("DaysSinceLastFillup")
                        .HasColumnType("int");

                    b.Property<decimal>("Gallons")
                        .HasColumnType("decimal(7,3)");

                    b.Property<int>("Odometer")
                        .HasColumnType("int");

                    b.Property<decimal>("TotalCost")
                        .HasColumnType("decimal(7,2)");

                    b.Property<decimal>("TripOdometer")
                        .HasColumnType("decimal(7,1)");

                    b.Property<int>("VehicleId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("VehicleId");

                    b.ToTable("Fillup", "Mpg");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Date = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            DaysSinceLastFillup = 0,
                            Gallons = 10.234m,
                            Odometer = 12345,
                            TotalCost = 25.52m,
                            TripOdometer = 275.6m,
                            VehicleId = 1
                        },
                        new
                        {
                            Id = 2,
                            Date = new DateTime(2021, 5, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            DaysSinceLastFillup = 0,
                            Gallons = 10.234m,
                            Odometer = 12700,
                            TotalCost = 25.52m,
                            TripOdometer = 275.6m,
                            VehicleId = 1
                        });
                });

            modelBuilder.Entity("GasMileage.Models.User", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<bool?>("IsAdmin")
                        .HasColumnType("bit");

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("TempPassword")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UserName")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("Id");

                    b.HasIndex("UserName")
                        .IsUnique();

                    b.ToTable("User", "Mpg");
                });

            modelBuilder.Entity("GasMileage.Models.Vehicle", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Color")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Make")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Model")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("UserId")
                        .HasColumnType("int");

                    b.Property<string>("Vin")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Year")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("Vehicle", "Mpg");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Color = "White",
                            Make = "Toyota",
                            Model = "Pickup",
                            UserId = 1,
                            Vin = "JT4RN...",
                            Year = 1985
                        },
                        new
                        {
                            Id = 2,
                            Color = "Gold",
                            Make = "Saturn",
                            Model = "SW2",
                            UserId = 0,
                            Year = 1995
                        });
                });

            modelBuilder.Entity("GasMileage.Models.Fillup", b =>
                {
                    b.HasOne("GasMileage.Models.Vehicle", "Vehicle")
                        .WithMany("Fillups")
                        .HasForeignKey("VehicleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Vehicle");
                });

            modelBuilder.Entity("GasMileage.Models.Vehicle", b =>
                {
                    b.Navigation("Fillups");
                });
#pragma warning restore 612, 618
        }
    }
}
